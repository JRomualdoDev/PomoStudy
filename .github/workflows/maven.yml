name: CI e Release Manual do Spring Boot

# Gatilhos do workflow
on:
  # 1. Gatilhos automáticos para Integração Contínua (CI)
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # 2. Gatilho manual para fazer uma Release (CD)
  workflow_dispatch:
    inputs:
      version:
        description: 'Versão para a release (ex: v1.4.0)'
        required: true
      release_notes:
        description: 'Notas da release (changelog).'
        required: true
        default: 'Correções de bugs e melhorias.'
      is_prerelease:
        description: 'É uma pré-release (beta, alpha)?'
        type: boolean
        default: false

# Definição do job
jobs:
  # Um único job que se comporta de forma diferente
  build-test-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          # Para o workflow_dispatch, garante que estamos pegando o código mais recente do master
          # Para push/PR, ele já pega o commit/PR correto automaticamente
          ref: 'master'

      - name: Configurar Java 21 e Maven
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Rodar testes com Maven
        # ESTE PASSO RODA SEMPRE, em todos os gatilhos (push, PR e workflow_dispatch)
        run: mvn -B test --file pom.xml

      # --- PASSOS EXCLUSIVOS DA RELEASE ---
      # Os passos a seguir só serão executados se o workflow foi iniciado manualmente

      - name: Empacotar a aplicação (gerar JAR)
        # A condição 'if' verifica qual evento disparou o workflow
        if: github.event_name == 'workflow_dispatch'
        run: mvn -B package --file pom.xml -DskipTests

      - name: Extrair nome do artefato do pom.xml
        if: github.event_name == 'workflow_dispatch'
        id: get_artifact_name
        run: echo "ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout).jar" >> $GITHUB_ENV

      - name: Criar Tag e Release no GitHub
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.release_notes }}
          prerelease: ${{ github.event.inputs.is_prerelease }}
          files: |
            ./target/${{ env.ARTIFACT_NAME }}