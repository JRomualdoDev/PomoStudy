# Nome do Workflow
name: Disparar Release Manual da Aplicação

on:
  # Permite que você rode este workflow manualmente pela aba Actions
  workflow_dispatch:
    # Campos de entrada que aparecerão no formulário do GitHub
    inputs:
      version:
        description: 'Versão para a release (ex: v1.4.0)'
        required: true
      release_notes:
        description: 'Notas da release (changelog). O que mudou?'
        required: false
        default: 'Correções de bugs e melhorias de performance.'
      is_prerelease:
        description: 'É uma pré-release (beta, alpha)?'
        type: boolean
        default: false

# Definição do job
jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código do branch master
        uses: actions/checkout@v4
        with:
          ref: 'master' # Garante que estamos pegando o código mais recente do master

      - name: Configurar Java 21 e Maven
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Rodar testes com Maven
        run: mvn -B test --file pom.xml

      - name: Empacotar a aplicação (gerar JAR)
        run: mvn -B package --file pom.xml -DskipTests

      - name: Extrair nome do artefato do pom.xml
        id: get_artifact_name
        run: echo "ARTIFACT_NAME=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout).jar" >> $GITHUB_ENV


      - name: Criar a Release no GitHub
        # criar a tag e a release de uma vez só
        uses: softprops/action-gh-release@v1
        with:
          # O token é necessário para criar tags/releases
          token: ${{ secrets.GITHUB_TOKEN }}
          # Usa a versão que você digitou no formulário
          tag_name: ${{ github.event.inputs.version }}
          # Nome da Release
          name: Release ${{ github.event.inputs.version }}
          # Corpo da Release (changelog)
          body: ${{ github.event.inputs.release_notes }}
          # Marca como pré-release se você selecionou a opção
          prerelease: ${{ github.event.inputs.is_prerelease }}
          # Lista de arquivos para anexar à release
          files: |
            ./target/${{ env.ARTIFACT_NAME }}